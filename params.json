{
  "name": "Kod-b",
  "tagline": "",
  "body": "``### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.furture<html> <head> <title>Open Graph Getting Started App - og.likes</title> <style type=\"text/css\"> div { padding: 10px; } </style> <meta charset=\"UTF-8\"> </head> <body> <div id=\"fb-root\"></div> <script type=\"text/javascript\">   // You probably don't want to use globals, but this is just example code   var fbAppId = 'replace me';   var objectToLike = 'http://techcrunch.com/2013/02/06/facebook-launches-developers-live-video-channel-to-keep-its-developer-ecosystem-up-to-date/';    // 113971752004387       // This is boilerplate code that is used to initialize the Facebook   // JS SDK.  You would normally set your App ID in this code.    // Additional JS functions here   window.fbAsyncInit = function() {     FB.init({       appId      : fbAppId,        // App ID       status     : true,           // check login status       cookie     : true,           // enable cookies to allow the server to access the session       xfbml      : true            // parse page for xfbml or html5 social plugins like login button below     });      // Put additional init code here   };    // Load the SDK Asynchronously   (function(d, s, id){      var js, fjs = d.getElementsByTagName(s)[0];      if (d.getElementById(id)) {return;}      js = d.createElement(s); js.id = id;      js.src = \"//connect.facebook.net/en_US/all.js\";      fjs.parentNode.insertBefore(js, fjs);    }(document, 'script', 'facebook-jssdk'));    /*    * This function makes a call to the og.likes API.  The object argument is    * the object you like.  Other types of APIs may take other arguments.    * (i.e. the book.reads API takes a book= argument.)    *    * Because it's a sample, it also sets the privacy parameter so that it will    * create a story that only you can see.  Remove the privacy parameter and    * the story will be visible to whatever the default privacy was when you    * added the app.    *    * Also note that you can view any story with the id, as demonstrated with    * the code below.    *    * APIs used in postLike():    * Call the Graph API from JS:    *   https://developers.facebook.com/docs/reference/javascript/FB.api    * The Open Graph og.likes API:    *   https://developers.facebook.com/docs/reference/opengraph/action-type/og.likes    * Privacy argument:    *   https://developers.facebook.com/docs/reference/api/privacy-parameter    */    function postLike() {     FB.api(        'https://graph.facebook.com/me/og.likes',        'post',        { object: objectToLike,          privacy: {'value': 'SELF'} },        function(response) {          if (!response) {            alert('Error occurred.');          } else if (response.error) {            document.getElementById('result').innerHTML = 'Error: ' + response.error.message;          } else {            document.getElementById('result').innerHTML =              '<a href=\\\"https://www.facebook.com/me/activity/' + response.id + '\\\">' +              'Story created.  ID is ' + response.id + '</a>';          }        }     );   } </script>\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}